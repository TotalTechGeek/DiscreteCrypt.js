const bigInt = require('big-integer')
let DiscreteCrypt = require('./src/discretecrypt.node.js')

let params = {
    prime : new bigInt("9337258299206731509799933749238072945211050670461145905014625822101372085456209940957131562283227400601292308149692164829693376912675307908079245489017931083161166993796519113825260060596655551769577287164799465144766290768013660391310347707944095797446444731903100000142599715425222457344225526050022510850154313193175456076342256477785118056757628487642302617333875748867700351674341574049695310990044994399351485992643408022666915974166176920756124484080619169135859795646360193746939432441585780096613854855953644492007654959352992892564952714977268124623221417703740932226294574825958290879995630824969541329034688682118673128950015122151255842370247174592601592710595976052348588496315410874492678391136168774470473187190911290643450889559272275574020874487751530000870127612125581289159639567671197675876301073866348976076967984619517428495174486870392475889674081258247148342572679329061225543662596317526998027836755651", 10),
    gen : new bigInt(2)
}

// This is tuned down due to the random 256 bit key space.
const scryptConfig = {
    N: 1 << 10,
    r: 5,
    p: 1,
    len: 32
}


Promise.all([
    DiscreteCrypt.Contact.create(null, null, scryptConfig, params),
    DiscreteCrypt.Contact.create(null, null, scryptConfig, params)
]).then(([
    jesse,
    jerry
]) =>
{
    DiscreteCrypt.exchange(jesse, jerry, { master: '12345678901234567890123456789012', organization_id: '1'}).then(data =>
    {
        console.log(JSON.stringify(data))
        DiscreteCrypt.open(jerry, data).then(console.log).catch(console.log)
    })
})